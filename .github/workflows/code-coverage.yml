on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review

jobs:
 # Generate a matrix with a directories which have changed files
 code-coverage:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Read Solution Configuration
      id: configuration
      uses: ActionsTools/read-json-action@main
      with:
        file_path: "sln.build.json"

    - name: Display read-yaml output
      run: |
        echo "${{ toJSON(steps.configuration.outputs) }}"
        echo "dotnet version: ${{ steps.configuration.outputs.dotnet_version }}"
        echo "node version: ${{ steps.configuration.outputs.node_version }}"

    # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ steps.configuration.outputs.dotnet_version }}

    - name: Setup Node
      uses: actions/setup-node@v3
      if: ${{ steps.configuration.outputs.node_version != '' }}
      with:
        node-version: ${{ steps.configuration.outputs.node_version }}

    - name: dotnet build
      working-directory: ${{ inputs.source }}
      run: |
        dotnet restore
        dotnet build -c 'Release' -p 'any'

    - name: dotnet test
      working-directory: ${{ inputs.source }}
      run: |
        dotnet test -c 'Release' --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Code Coverage - Create Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: success() || failure()
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Code Coverage - Add PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request' && (success() || failure())
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Code Coverage - Create Report
      if: success() || failure()
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage/**/coverage.cobertura.xml \
          -targetdir:${{github.workspace}}/code-coverage \
          -reporttypes:'MarkdownSummaryGithub'

    - name: Summary - Write Basic Code Coverage
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Summary - Write Code Coverage Report
      run: cat code-coverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY