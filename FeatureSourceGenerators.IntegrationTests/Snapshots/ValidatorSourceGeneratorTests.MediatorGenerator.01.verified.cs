//HintName: Create.g.cs
// <auto-generated />
using System.Collections.Generic;


public static partial class Create
{

    public sealed partial record Command : MediatR.IRequest<MediatR.Unit>{}
    
    internal sealed partial class CommandHandlerImpl : MediatR.IRequestHandler<Command, MediatR.Unit>
    {
        private readonly ApplicationDbContext _context;
        private readonly ILogger _logger;

        public CommandHandlerImpl(
            ApplicationDbContext context,
            ILogger logger
        )
        {
            _context = context;
            _logger = logger;
        }

        public async System.Threading.Tasks.Task<MediatR.Unit> Handle(Command request, CancellationToken cancellationToken) 
        {
            await CommandHandler(
                request,
                _context,
                _logger
            );
            return MediatR.Unit.Value;
        }
    }

    public sealed partial record Command
    {
        internal sealed partial class Validator : FluentValidation.AbstractValidator<Command>
        {
            public Validator() 
            {
                Command.AddValidation(this);
            }
        }
    }
}